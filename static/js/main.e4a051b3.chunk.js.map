{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","state","isReversed","sortType","reverseList","setState","sortByAlphabet","sortByLength","reset","this","goods","visibleGoods","sort","itemA","itemB","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","goodItem","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+QAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6BK,IAAMC,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAU,QAHd,EAMEC,YAAc,WACZ,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEI,eAAiB,WACf,EAAKD,SAAS,CAAEF,SAAU,cAb9B,EAgBEI,aAAe,WACb,EAAKF,SAAS,CAAEF,SAAU,YAjB9B,EAoBEK,MAAQ,WACN,EAAKH,SAAU,CAAEH,YAAY,EAAOC,SAAU,UArBlD,4CAwBE,WACE,MAAiCM,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EApDH,SACLA,EADK,GAGJ,IADCP,EACF,EADEA,SAAUD,EACZ,EADYA,WAENS,EAAY,YAAOD,GAEzB,OAAQP,GACN,IAAK,WACHQ,EAAaC,OACb,MAEF,IAAK,SACHD,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAW7D,OAJIb,GACFS,EAAaK,UAGRL,EA6BSM,CAAkBlB,EAAiB,CAAEI,WAAUD,eAE7D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAyB,aAAbjB,IAEhBkB,QAASZ,KAAKH,eANhB,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAyB,WAAbjB,IAEhBkB,QAASZ,KAAKF,aANhB,4BAWA,wBACEY,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAASZ,KAAKL,YANhB,sBAWEF,GAA2B,SAAbC,IACd,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAASZ,KAAKD,MAHhB,sBAWJ,6BACE,6BACGE,EAAMY,KAAI,SAAAC,GAAQ,OACjB,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBAjFrB,GAAyBC,IAAMC,WCzC/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e4a051b3.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport function getReorderedGoods(\n  goods,\n  { sortType, isReversed },\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case 'alphabet':\n      visibleGoods.sort();\n      break;\n\n    case 'length':\n      visibleGoods.sort((itemA, itemB) => itemA.length - itemB.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component {\n  state = {\n    isReversed: false,\n    sortType: 'none',\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: 'alphabet' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: 'length' });\n  };\n\n  reset = () => {\n    this.setState(({ isReversed: false, sortType: 'none' }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== 'alphabet' },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== 'length' },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverseList}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== 'none') && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(goodItem => (\n              <li\n                data-cy=\"Good\"\n                key={goodItem}\n              >\n                {goodItem}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}